{
	"View Model" : {
		"prefix": ["mvvm"],
		"body": "function use${1:ComponentName}ViewModel({ }: ${1:ComponentName}Props) {\n\treturn {\n\t\t$2\n\t};\n}",
	},
	"View": {
		"prefix": ["view"],
		"body": "import React from 'react';\nimport clsx from 'clsx';\nimport { ${1:ComponentName}Props } from './${1:ComponentName}.types';\nimport styles from './${1:ComponentName}.module.scss';\n\nfunction ${1:ComponentName}(props: ${1:ComponentName}Props) {\n\tconst { children, className, testingID } = props;\n\n\treturn (\n\t\t<div className={clsx('${1:ComponentName}', styles.${1:ComponentName}, className)} data-testid={testingID}>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default React.memo(${1:ComponentName});",
	},
	"React Hook": {
		"prefix": ["rh"],
		"body": "export default function use${1:Name}() {\n\treturn {\n\t\t$2\n\t};\n}",
	},
	"Component Types" : {
		"prefix": "ct",
		"body": "import { ITestableProps } from '@app/types/testing';\nimport React from 'react';\n\nexport interface ${1:ComponentName}Props extends React.PropsWithChildren<{}>, ITestableProps {\n\tclassName?: string;\n\tstyles?: React.CSSProperties;\n}\n",
	},
	"Scss Module": {
		"prefix": ["scss"],
		"body": ".${1:ComponentName} {\n\t$2\n}",
	},
	"View Test": {
		"prefix": "vt",
		"body": "\/* eslint-disable import/no-extraneous-dependencies *\/\nimport { render } from '@testing-library/react';\nimport ${1:ComponentName} from './${1:ComponentName}';\n\ndescribe('${1:ComponentName} Component', () => {\n\tit('should render', () => {\n\t\tconst { container } = render(<${1:ComponentName} />);\n\t\texpect(container).toBeTruthy();\n\t});\n});\n",
	},
	"Hook Test" : {
		"prefix": "ht",
		"body": "\/* eslint-disable import/no-extraneous-dependencies *\/\nimport { renderHook } from '@testing-library/react-hooks';\nimport use${1:ComponentName} from './use${1:ComponentName}';\n\ndescribe('${1:ComponentName} Hook', () => {\n\tit('should return', () => {\n\t\tconst { result } = renderHook(() => use${1:ComponentName}());\n\t\texpect(result.current).toBeTruthy();\n\t});\n});\n",
	},
}